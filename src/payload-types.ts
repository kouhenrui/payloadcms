/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    templates: Template;
    pages: Page;
    components: Component;
    collections: Collection;
    media: Media;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    templates: TemplatesSelect<false> | TemplatesSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    components: ComponentsSelect<false> | ComponentsSelect<true>;
    collections: CollectionsSelect<false> | CollectionsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * Manage system users and permissions
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  password: string | null;
  /**
   * User identity type
   */
  identity: 'admin' | 'user' | 'vip';
  /**
   * Whether the user is active
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
  /**
   * User email address
   */
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
}
/**
 * Create and manage templates, supporting page, component, and collection types
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "templates".
 */
export interface Template {
  id: string;
  /**
   * URL Friendly Identifier
   */
  slug: string;
  /**
   * Language Selection
   */
  language: 'zh' | 'zh-TW' | 'ja-JP' | 'ko-KR' | 'en';
  /**
   * Content Status
   */
  status: 'draft' | 'published' | 'archived';
  /**
   * Content Author
   */
  author: string | User;
  /**
   * Published At
   */
  publishedAt?: string | null;
  /**
   * Last Updated By
   */
  updatedBy?: (string | null) | User;
  /**
   * Select Template Type
   */
  templateType: 'page' | 'component' | 'collection';
  /**
   * Select Template Field Type, Build Template Structure
   */
  fields: (
    | {
        /**
         * 字段名称（用于数据存储）
         */
        fieldName: string;
        /**
         * 占位符文本
         */
        placeholder?: string | null;
        required?: boolean | null;
        /**
         * 最大长度
         */
        maxLength?: number | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'textInput';
      }
    | {
        /**
         * 字段名称（用于数据存储）
         */
        fieldName: string;
        required?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'richText';
      }
    | {
        /**
         * 字段名称（用于数据存储）
         */
        fieldName: string;
        required?: boolean | null;
        /**
         * 最小值
         */
        min?: number | null;
        /**
         * 最大值
         */
        max?: number | null;
        /**
         * 步长
         */
        step?: number | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'numberInput';
      }
    | {
        /**
         * 字段名称（用于数据存储）
         */
        fieldName: string;
        required?: boolean | null;
        /**
         * 是否多选
         */
        multiple?: boolean | null;
        options: {
          value: string;
          id?: string | null;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'select';
      }
    | {
        /**
         * 字段名称（用于数据存储）
         */
        fieldName: string;
        /**
         * 字段标签
         */
        label: string;
        required?: boolean | null;
        /**
         * 最小日期
         */
        minDate?: string | null;
        /**
         * 最大日期
         */
        maxDate?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'datePicker';
      }
    | {
        /**
         * 字段名称（用于数据存储）
         */
        fieldName: string;
        /**
         * 字段标签
         */
        label: string;
        required?: boolean | null;
        /**
         * 是否多文件
         */
        multiple?: boolean | null;
        /**
         * 接受的文件类型（如：.pdf,.doc,.docx）
         */
        accept?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'fileUpload';
      }
    | {
        /**
         * 字段名称（用于数据存储）
         */
        fieldName: string;
        /**
         * 字段标签
         */
        label: string;
        required?: boolean | null;
        /**
         * 是否多图片
         */
        multiple?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'imageUpload';
      }
    | {
        /**
         * 字段名称（用于数据存储）
         */
        fieldName: string;
        /**
         * 字段标签
         */
        label: string;
        /**
         * 占位符文本
         */
        placeholder?: string | null;
        required?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'emailInput';
      }
    | {
        /**
         * 字段名称（用于数据存储）
         */
        fieldName: string;
        /**
         * 字段标签
         */
        label: string;
        /**
         * 占位符文本
         */
        placeholder?: string | null;
        required?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'phoneInput';
      }
    | {
        /**
         * 字段名称（用于数据存储）
         */
        fieldName: string;
        required?: boolean | null;
        /**
         * 默认选中
         */
        defaultChecked?: boolean | null;
        options: {
          value: string;
          defaultSelected?: boolean | null;
          id?: string | null;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'checkbox';
      }
    | {
        /**
         * 字段名称（用于数据存储）
         */
        fieldName: string;
        required?: boolean | null;
        options: {
          value: string;
          defaultSelected?: boolean | null;
          id?: string | null;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'radioGroup';
      }
    | {
        /**
         * 字段名称（用于数据存储）
         */
        fieldName: string;
        /**
         * 字段标签
         */
        label: string;
        /**
         * 占位符文本
         */
        placeholder?: string | null;
        required?: boolean | null;
        /**
         * 行数
         */
        rows?: number | null;
        /**
         * 最大长度
         */
        maxLength?: number | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'textarea';
      }
  )[];
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Create actual pages using page templates, supporting multiple languages
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  /**
   * URL Friendly Identifier
   */
  slug: string;
  /**
   * Language Selection
   */
  language: 'zh' | 'zh-TW' | 'ja-JP' | 'ko-KR' | 'en';
  /**
   * Content Status
   */
  status: 'draft' | 'published' | 'archived';
  /**
   * Content Author
   */
  author: string | User;
  /**
   * Published At
   */
  publishedAt?: string | null;
  /**
   * Last Updated By
   */
  updatedBy?: (string | null) | User;
  /**
   * Select a published page template
   */
  template: string | Template;
  /**
   * 根据模板定义的字段添加内容
   */
  templateFields?:
    | {
        /**
         * 字段名称（对应模板中的字段名）
         */
        fieldName: string;
        /**
         * 字段类型
         */
        fieldType:
          | 'text'
          | 'textarea'
          | 'richText'
          | 'number'
          | 'email'
          | 'select'
          | 'date'
          | 'file'
          | 'image'
          | 'question'
          | 'answer'
          | 'heading'
          | 'description'
          | 'button'
          | 'quote'
          | 'code'
          | 'video'
          | 'gallery'
          | 'table'
          | 'list'
          | 'stats';
        /**
         * 字段值
         */
        fieldValue?: string | null;
        /**
         * 富文本内容
         */
        richTextValue?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        /**
         * 数字值
         */
        numberValue?: number | null;
        /**
         * 日期值
         */
        dateValue?: string | null;
        /**
         * 选择值
         */
        selectValue?: string | null;
        /**
         * 文件/图片
         */
        fileValue?: (string | null) | Media;
        /**
         * 图片画廊
         */
        galleryValue?:
          | {
              image: string | Media;
              caption?: string | null;
              id?: string | null;
            }[]
          | null;
        /**
         * 表格数据
         */
        tableValue?: {
          headers?:
            | {
                header: string;
                id?: string | null;
              }[]
            | null;
          rows?:
            | {
                cells?:
                  | {
                      cell?: string | null;
                      id?: string | null;
                    }[]
                  | null;
                id?: string | null;
              }[]
            | null;
        };
        /**
         * 列表项
         */
        listValue?:
          | {
              item: string;
              id?: string | null;
            }[]
          | null;
        /**
         * 统计数据
         */
        statsValue?:
          | {
              label: string;
              value: number;
              unit?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'templateField';
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Manage media files, supporting images, videos, audio and documents
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  /**
   * 文件的替代文本，用于无障碍访问
   */
  alt: string;
  /**
   * 文件说明文字
   */
  caption?: string | null;
  /**
   * 文件标题
   */
  title?: string | null;
  /**
   * 文件详细描述
   */
  description?: string | null;
  /**
   * 文件类型分类
   */
  fileType?: ('image' | 'video' | 'audio' | 'document' | 'other') | null;
  /**
   * 文件标签，用于分类和搜索
   */
  tags?: string[] | null;
  /**
   * 文件分类
   */
  category?: ('general' | 'product' | 'marketing' | 'news' | 'user-upload' | 'system') | null;
  /**
   * 文件用途
   */
  usage?: ('website' | 'mobile' | 'social' | 'email' | 'print' | 'internal')[] | null;
  /**
   * 文件元数据
   */
  metadata?: {
    /**
     * 图片/视频宽度（像素）
     */
    width?: number | null;
    /**
     * 图片/视频高度（像素）
     */
    height?: number | null;
    /**
     * 视频/音频时长（秒）
     */
    duration?: number | null;
    /**
     * 文件大小（字节）
     */
    fileSize?: number | null;
    /**
     * 文件格式
     */
    format?: string | null;
    /**
     * 视频/音频比特率
     */
    bitrate?: number | null;
    /**
     * 视频帧率
     */
    fps?: number | null;
  };
  /**
   * SEO 设置
   */
  seo?: {
    /**
     * SEO 替代文本
     */
    altText?: string | null;
    /**
     * SEO 标题
     */
    title?: string | null;
    /**
     * SEO 描述
     */
    description?: string | null;
  };
  /**
   * 权限设置
   */
  permissions?: {
    /**
     * 是否公开访问
     */
    isPublic?: boolean | null;
    /**
     * 是否需要认证才能访问
     */
    requiresAuth?: boolean | null;
    /**
     * 允许访问的角色
     */
    allowedRoles?: ('admin' | 'user' | 'vip')[] | null;
  };
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * Create actual components using component templates, supporting multiple languages
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "components".
 */
export interface Component {
  id: string;
  /**
   * URL Friendly Identifier
   */
  slug: string;
  /**
   * Language Selection
   */
  language: 'zh' | 'zh-TW' | 'ja-JP' | 'ko-KR' | 'en';
  /**
   * Content Status
   */
  status: 'draft' | 'published' | 'archived';
  /**
   * Content Author
   */
  author: string | User;
  /**
   * Published At
   */
  publishedAt?: string | null;
  /**
   * Last Updated By
   */
  updatedBy?: (string | null) | User;
  /**
   * Select a published component template
   */
  template: string | Template;
  /**
   * 根据模板定义的字段添加内容
   */
  templateFields?:
    | {
        /**
         * 字段名称（对应模板中的字段名）
         */
        fieldName: string;
        /**
         * 字段类型
         */
        fieldType:
          | 'text'
          | 'textarea'
          | 'richText'
          | 'number'
          | 'email'
          | 'select'
          | 'date'
          | 'file'
          | 'image'
          | 'question'
          | 'answer'
          | 'heading'
          | 'description'
          | 'button'
          | 'quote'
          | 'code'
          | 'video'
          | 'gallery'
          | 'table'
          | 'list'
          | 'stats';
        /**
         * 字段值
         */
        fieldValue?: string | null;
        /**
         * 富文本内容
         */
        richTextValue?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        /**
         * 数字值
         */
        numberValue?: number | null;
        /**
         * 日期值
         */
        dateValue?: string | null;
        /**
         * 选择值
         */
        selectValue?: string | null;
        /**
         * 文件/图片
         */
        fileValue?: (string | null) | Media;
        /**
         * 图片画廊
         */
        galleryValue?:
          | {
              image: string | Media;
              caption?: string | null;
              id?: string | null;
            }[]
          | null;
        /**
         * 表格数据
         */
        tableValue?: {
          headers?:
            | {
                header: string;
                id?: string | null;
              }[]
            | null;
          rows?:
            | {
                cells?:
                  | {
                      cell?: string | null;
                      id?: string | null;
                    }[]
                  | null;
                id?: string | null;
              }[]
            | null;
        };
        /**
         * 列表项
         */
        listValue?:
          | {
              item: string;
              id?: string | null;
            }[]
          | null;
        /**
         * 统计数据
         */
        statsValue?:
          | {
              label: string;
              value: number;
              unit?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'templateField';
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Create collection content using collection templates, supporting multiple languages
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "collections".
 */
export interface Collection {
  id: string;
  /**
   * URL Friendly Identifier
   */
  slug: string;
  /**
   * Language Selection
   */
  language: 'zh' | 'zh-TW' | 'ja-JP' | 'ko-KR' | 'en';
  /**
   * Content Status
   */
  status: 'draft' | 'published' | 'archived';
  /**
   * Content Author
   */
  author: string | User;
  /**
   * Published At
   */
  publishedAt?: string | null;
  /**
   * Last Updated By
   */
  updatedBy?: (string | null) | User;
  /**
   * Select a published collection template
   */
  template: string | Template;
  /**
   * Add content based on the template defined fields
   */
  templateFields?:
    | {
        fieldType: 'question' | 'answer';
        /**
         * 问题文本
         */
        questionText?: string | null;
        /**
         * 问题图片（可选）
         */
        questionImage?: (string | null) | Media;
        /**
         * 答案类型
         */
        answerType?: ('text' | 'richText' | 'link' | 'image' | 'video') | null;
        /**
         * 答案文本
         */
        answerText?: string | null;
        /**
         * 答案富文本
         */
        answerRichText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        /**
         * 链接地址
         */
        answerUrl?: string | null;
        /**
         * 链接文本
         */
        answerLinkText?: string | null;
        /**
         * 媒体文件
         */
        answerMedia?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'dynamicField';
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'templates';
        value: string | Template;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'components';
        value: string | Component;
      } | null)
    | ({
        relationTo: 'collections';
        value: string | Collection;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  password?: T;
  identity?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "templates_select".
 */
export interface TemplatesSelect<T extends boolean = true> {
  slug?: T;
  language?: T;
  status?: T;
  author?: T;
  publishedAt?: T;
  updatedBy?: T;
  templateType?: T;
  fields?:
    | T
    | {
        textInput?:
          | T
          | {
              fieldName?: T;
              placeholder?: T;
              required?: T;
              maxLength?: T;
              id?: T;
              blockName?: T;
            };
        richText?:
          | T
          | {
              fieldName?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        numberInput?:
          | T
          | {
              fieldName?: T;
              required?: T;
              min?: T;
              max?: T;
              step?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              fieldName?: T;
              required?: T;
              multiple?: T;
              options?:
                | T
                | {
                    value?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        datePicker?:
          | T
          | {
              fieldName?: T;
              label?: T;
              required?: T;
              minDate?: T;
              maxDate?: T;
              id?: T;
              blockName?: T;
            };
        fileUpload?:
          | T
          | {
              fieldName?: T;
              label?: T;
              required?: T;
              multiple?: T;
              accept?: T;
              id?: T;
              blockName?: T;
            };
        imageUpload?:
          | T
          | {
              fieldName?: T;
              label?: T;
              required?: T;
              multiple?: T;
              id?: T;
              blockName?: T;
            };
        emailInput?:
          | T
          | {
              fieldName?: T;
              label?: T;
              placeholder?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        phoneInput?:
          | T
          | {
              fieldName?: T;
              label?: T;
              placeholder?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        checkbox?:
          | T
          | {
              fieldName?: T;
              required?: T;
              defaultChecked?: T;
              options?:
                | T
                | {
                    value?: T;
                    defaultSelected?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        radioGroup?:
          | T
          | {
              fieldName?: T;
              required?: T;
              options?:
                | T
                | {
                    value?: T;
                    defaultSelected?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              fieldName?: T;
              label?: T;
              placeholder?: T;
              required?: T;
              rows?: T;
              maxLength?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  slug?: T;
  language?: T;
  status?: T;
  author?: T;
  publishedAt?: T;
  updatedBy?: T;
  template?: T;
  templateFields?:
    | T
    | {
        templateField?:
          | T
          | {
              fieldName?: T;
              fieldType?: T;
              fieldValue?: T;
              richTextValue?: T;
              numberValue?: T;
              dateValue?: T;
              selectValue?: T;
              fileValue?: T;
              galleryValue?:
                | T
                | {
                    image?: T;
                    caption?: T;
                    id?: T;
                  };
              tableValue?:
                | T
                | {
                    headers?:
                      | T
                      | {
                          header?: T;
                          id?: T;
                        };
                    rows?:
                      | T
                      | {
                          cells?:
                            | T
                            | {
                                cell?: T;
                                id?: T;
                              };
                          id?: T;
                        };
                  };
              listValue?:
                | T
                | {
                    item?: T;
                    id?: T;
                  };
              statsValue?:
                | T
                | {
                    label?: T;
                    value?: T;
                    unit?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "components_select".
 */
export interface ComponentsSelect<T extends boolean = true> {
  slug?: T;
  language?: T;
  status?: T;
  author?: T;
  publishedAt?: T;
  updatedBy?: T;
  template?: T;
  templateFields?:
    | T
    | {
        templateField?:
          | T
          | {
              fieldName?: T;
              fieldType?: T;
              fieldValue?: T;
              richTextValue?: T;
              numberValue?: T;
              dateValue?: T;
              selectValue?: T;
              fileValue?: T;
              galleryValue?:
                | T
                | {
                    image?: T;
                    caption?: T;
                    id?: T;
                  };
              tableValue?:
                | T
                | {
                    headers?:
                      | T
                      | {
                          header?: T;
                          id?: T;
                        };
                    rows?:
                      | T
                      | {
                          cells?:
                            | T
                            | {
                                cell?: T;
                                id?: T;
                              };
                          id?: T;
                        };
                  };
              listValue?:
                | T
                | {
                    item?: T;
                    id?: T;
                  };
              statsValue?:
                | T
                | {
                    label?: T;
                    value?: T;
                    unit?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "collections_select".
 */
export interface CollectionsSelect<T extends boolean = true> {
  slug?: T;
  language?: T;
  status?: T;
  author?: T;
  publishedAt?: T;
  updatedBy?: T;
  template?: T;
  templateFields?:
    | T
    | {
        dynamicField?:
          | T
          | {
              fieldType?: T;
              questionText?: T;
              questionImage?: T;
              answerType?: T;
              answerText?: T;
              answerRichText?: T;
              answerUrl?: T;
              answerLinkText?: T;
              answerMedia?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  title?: T;
  description?: T;
  fileType?: T;
  tags?: T;
  category?: T;
  usage?: T;
  metadata?:
    | T
    | {
        width?: T;
        height?: T;
        duration?: T;
        fileSize?: T;
        format?: T;
        bitrate?: T;
        fps?: T;
      };
  seo?:
    | T
    | {
        altText?: T;
        title?: T;
        description?: T;
      };
  permissions?:
    | T
    | {
        isPublic?: T;
        requiresAuth?: T;
        allowedRoles?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}